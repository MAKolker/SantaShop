// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SantaShop.Db;

#nullable disable

namespace SantaShop.Db.Migrations
{
    [DbContext(typeof(GiftShopContext))]
    partial class GiftShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SantaShop.Domain.ChildEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "Age")
                        .IsUnique();

                    b.ToTable("Children", (string)null);
                });

            modelBuilder.Entity("SantaShop.Domain.GiftRequestEntity", b =>
                {
                    b.Property<Guid>("ChildId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GiftId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChildId", "GiftId");

                    b.HasIndex("GiftId");

                    b.ToTable("GiftRequest", (string)null);
                });

            modelBuilder.Entity("SantaShop.Domain.GiftsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Gifts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaa4862e-edeb-4a38-93d8-18d1027fe030"),
                            Name = "PSP",
                            Price = 50
                        },
                        new
                        {
                            Id = new Guid("deb212df-a31a-4208-a8fa-cc3dc84f34b5"),
                            Name = "Rocket",
                            Price = 45
                        },
                        new
                        {
                            Id = new Guid("f3e2cc25-264c-4eff-ab71-b04f829ebbd6"),
                            Name = "RC Car",
                            Price = 25
                        },
                        new
                        {
                            Id = new Guid("e18f979c-5770-4696-b33e-8010d3c2849f"),
                            Name = "Lego",
                            Price = 15
                        },
                        new
                        {
                            Id = new Guid("101b175e-e102-477e-ab21-c975c001c3b9"),
                            Name = "Barbie",
                            Price = 10
                        },
                        new
                        {
                            Id = new Guid("6f339fa9-da7e-4e2d-8000-337c6c7e8697"),
                            Name = "Cryon’s",
                            Price = 10
                        },
                        new
                        {
                            Id = new Guid("a4acd1b5-61e7-4dfe-bf0e-37c4659d41e6"),
                            Name = "Candies",
                            Price = 5
                        },
                        new
                        {
                            Id = new Guid("1d92ef48-9a6e-4f1f-bf3d-bfc6d12513b6"),
                            Name = "Mittens",
                            Price = 5
                        });
                });

            modelBuilder.Entity("SantaShop.Domain.GiftRequestEntity", b =>
                {
                    b.HasOne("SantaShop.Domain.ChildEntity", "Child")
                        .WithMany("Requests")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_GiftRequest_Child");

                    b.HasOne("SantaShop.Domain.GiftsEntity", "Gift")
                        .WithMany("Requests")
                        .HasForeignKey("GiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_GiftRequest_Gift");

                    b.Navigation("Child");

                    b.Navigation("Gift");
                });

            modelBuilder.Entity("SantaShop.Domain.ChildEntity", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("SantaShop.Domain.GiftsEntity", b =>
                {
                    b.Navigation("Requests");
                });
#pragma warning restore 612, 618
        }
    }
}
